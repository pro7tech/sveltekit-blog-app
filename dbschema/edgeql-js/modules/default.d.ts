// GENERATED by @edgedb/generate v0.0.7
// Run 'npx @edgedb/generate edgeql-js' to re-generate

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _std from "./std";
export declare type $Role = {
  "admin": $.$expr_Literal<$Role>;
  "user": $.$expr_Literal<$Role>;
} & $.EnumType<"default::Role", ["admin", "user"]>;
declare const Role: $Role

export declare type $HasTimestampλShape = $.typeutil.flatten<_std.$Object_1bdf7c72b41311edb12de75f7ba87378λShape & {
  "created_at": $.PropertyDesc<_std.$datetime, $.Cardinality.One, false, false, false, true>;
}>;
declare type $HasTimestamp = $.ObjectType<"default::HasTimestamp", $HasTimestampλShape, null, [
  ..._std.$Object_1bdf7c72b41311edb12de75f7ba87378['__exclusives__'],
]>;
declare const $HasTimestamp: $HasTimestamp

declare const HasTimestamp: $.$expr_PathNode<$.TypeSet<$HasTimestamp, $.Cardinality.Many>, null> 

export declare type $CommentλShape = $.typeutil.flatten<$HasTimestampλShape & {
  "content": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "author": $.LinkDesc<$User, $.Cardinality.One, {}, false, false,  false, false>;
  "post": $.LinkDesc<$Post, $.Cardinality.One, {}, false, false,  false, false>;
  "<comments[is Post]": $.LinkDesc<$Post, $.Cardinality.Many, {}, false, false,  false, false>;
  "<comments": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
declare type $Comment = $.ObjectType<"default::Comment", $CommentλShape, null, [
  ...$HasTimestamp['__exclusives__'],
]>;
declare const $Comment: $Comment

declare const Comment: $.$expr_PathNode<$.TypeSet<$Comment, $.Cardinality.Many>, null> 

export declare type $PostλShape = $.typeutil.flatten<$HasTimestampλShape & {
  "content": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "image_src": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "slug": $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
  "snippet": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "title": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "author": $.LinkDesc<$User, $.Cardinality.One, {}, false, false,  false, false>;
  "tags": $.LinkDesc<$Tag, $.Cardinality.Many, {}, false, false,  false, false>;
  "comments": $.LinkDesc<$Comment, $.Cardinality.Many, {}, false, true,  false, false>;
  "<post[is Comment]": $.LinkDesc<$Comment, $.Cardinality.Many, {}, false, false,  false, false>;
  "<post": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
declare type $Post = $.ObjectType<"default::Post", $PostλShape, null, [
  ...$HasTimestamp['__exclusives__'],
  {slug: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
declare const $Post: $Post

declare const Post: $.$expr_PathNode<$.TypeSet<$Post, $.Cardinality.Many>, null> 

export declare type $TagλShape = $.typeutil.flatten<_std.$Object_1bdf7c72b41311edb12de75f7ba87378λShape & {
  "name": $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
  "<tags[is Post]": $.LinkDesc<$Post, $.Cardinality.Many, {}, false, false,  false, false>;
  "<tags": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
declare type $Tag = $.ObjectType<"default::Tag", $TagλShape, null, [
  ..._std.$Object_1bdf7c72b41311edb12de75f7ba87378['__exclusives__'],
  {name: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
declare const $Tag: $Tag

declare const Tag: $.$expr_PathNode<$.TypeSet<$Tag, $.Cardinality.Many>, null> 

export declare type $UserλShape = $.typeutil.flatten<$HasTimestampλShape & {
  "email": $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
  "first_name": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "last_name": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "avatar_src": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "full_name": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, true, false, false>;
  "password_hash": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "role": $.PropertyDesc<$Role, $.Cardinality.AtMostOne, false, false, false, true>;
  "user_auth_token": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, true, false, false, false>;
  "username": $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
  "<author[is Comment]": $.LinkDesc<$Comment, $.Cardinality.Many, {}, false, false,  false, false>;
  "<author[is Post]": $.LinkDesc<$Post, $.Cardinality.Many, {}, false, false,  false, false>;
  "<author": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
declare type $User = $.ObjectType<"default::User", $UserλShape, null, [
  ...$HasTimestamp['__exclusives__'],
  {user_auth_token: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
  {username: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
  {email: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
declare const $User: $User

declare const User: $.$expr_PathNode<$.TypeSet<$User, $.Cardinality.Many>, null> 



export { Role, $HasTimestamp, HasTimestamp, $Comment, Comment, $Post, Post, $Tag, Tag, $User, User };

declare type __defaultExports = {
  "Role": typeof Role;
  "HasTimestamp": typeof HasTimestamp;
  "Comment": typeof Comment;
  "Post": typeof Post;
  "Tag": typeof Tag;
  "User": typeof User
};
declare const __defaultExports: __defaultExports;
export default __defaultExports;
