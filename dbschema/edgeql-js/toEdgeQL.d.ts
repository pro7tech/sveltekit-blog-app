// GENERATED by @edgedb/generate v0.0.7
// Run 'npx @edgedb/generate edgeql-js' to re-generate

import { $expr_Array, $expr_NamedTuple, $expr_Tuple, $expr_TuplePath } from "./typesystem";
import type { $expr_Literal } from "./literal";
import type { $expr_PathLeaf, $expr_PathNode, $expr_TypeIntersection } from "./path";
import type { $expr_Cast } from "./cast";
import type { $expr_Detached } from "./detached";
import type { $expr_For, $expr_ForVar } from "./for";
import type { $expr_Function, $expr_Operator } from "./funcops";
import type { $expr_Insert, $expr_InsertUnlessConflict } from "./insert";
import type { $expr_Param, $expr_WithParams } from "./params";
import type { $expr_Delete, $expr_Select } from "./select";
import type { $expr_Set } from "./set";
import type { $expr_Update } from "./update";
import type { $expr_Alias, $expr_With } from "./with";
import type { $expr_Group } from "./group";
import type { $expr_Global } from "./globals";
export declare type SomeExpression = $expr_PathNode | $expr_PathLeaf | $expr_Literal | $expr_Set | $expr_Array | $expr_Tuple | $expr_NamedTuple | $expr_TuplePath | $expr_Cast | $expr_Select | $expr_Delete | $expr_Update | $expr_Insert | $expr_InsertUnlessConflict | $expr_Function | $expr_Operator | $expr_For | $expr_ForVar | $expr_TypeIntersection | $expr_Alias | $expr_With | $expr_WithParams | $expr_Param | $expr_Detached | $expr_Group | $expr_Global;
export declare function $toEdgeQL(this: any): string;
